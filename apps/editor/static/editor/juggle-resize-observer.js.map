{"version":3,"sources":["./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","./node_modules/@juggle/resize-observer/lib/ResizeObservation.js","./node_modules/@juggle/resize-observer/lib/ResizeObserver.js","./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","./node_modules/@juggle/resize-observer/lib/utils/element.js","./node_modules/@juggle/resize-observer/lib/utils/global.js","./node_modules/@juggle/resize-observer/lib/utils/prettify.js","./node_modules/@juggle/resize-observer/lib/utils/scheduler.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;;;;;;;;;;;;;ACjB3B;AAAA;AAAA;AAAA;AAAA;AAAsE;AACL;AACN;AAC3D;AACA,YAAY,4DAAK;AACjB,YAAY,wEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,0CAA0C,kFAAwB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qFAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;;;;;;;;;;;;;AC9B7B;AAAA;AAAA;AAAA;AAAsE;AACX;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kFAAwB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kFAAwB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kFAAwB;AAChC;AACA;AACA,QAAQ,kFAAwB;AAChC;AACA;AACA,eAAe,uEAAuB;AACtC;AACA;AACA,CAAC;AACc,6EAAc,EAAC;AACJ;;;;;;;;;;;;;ACvC1B;AAAA;AAAA;AACA;AACA;AACA;AACA,CAAC,4DAA4D;AACzB;;;;;;;;;;;;;ACLpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACU;AACM;AACa;AACE;AACA;AACU;AACQ;AAC/F;AACA;AACA;AACA;AACA,0BAA0B,0DAAS;AACnC;AACA,iBAAiB,0DAAS;AAC1B;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mHAA+B;AACnC,WAAW,+FAAqB;AAChC,gBAAgB,2GAA2B;AAC3C,QAAQ,mHAA+B;AACvC;AACA,QAAQ,iGAAsB;AAC9B,QAAQ,iGAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0EAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oEAAiB;AACpE;AACA,gBAAgB,0DAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC6D;;;;;;;;;;;;;AC1E9D;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC+B;;;;;;;;;;;;;ACVhC;AAAA;AAAA;AAAkE;AAClE;AACA;AACA,oBAAoB,sFAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC8B;;;;;;;;;;;;;ACX/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACD;AACG;AACV;AACtD;AACA;AACA;AACA,IAAI,yEAAe;AACnB;AACA;AACA;AACA;AACA;AACA,4BAA4B,wEAAmB;AAC/C,8BAA8B,oFAAqB;AACnD;AACA,kCAAkC,0EAAgB;AAClD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,6CAA6C,yBAAyB;AACtE;AACA;AACA;AACA;AACA;AACuC;;;;;;;;;;;;;AChCvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AAClB;AACF;AACV;AACzC;AACA;AACA;AACA,gCAAgC,oDAAM,cAAc,oDAAM;AAC1D,uCAAuC,iCAAiC;AACxE;AACA,gCAAgC,gBAAgB;AAChD,+BAA+B,eAAe;AAC9C,iCAAiC,qBAAqB;AACtD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qBAAqB,gEAAe;AACpC,CAAC;AACD;AACA;AACA;AACA;AACA,QAAQ,+DAAQ;AAChB;AACA;AACA;AACA;AACA,cAAc,4DAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gEAAe;AACxC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2BAA2B,kFAAwB;AACnD;AACsD;;;;;;;;;;;;;ACrEtD;AAAA;AAAA;AAA4C;AAC5C;AACA,QAAQ,+DAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiC;;;;;;;;;;;;;ACbjC;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;;;;;;;;;;;;;ACflC;AAAA;AAAA;AAAA;AAAA;AAA8D;AACE;AACR;AACxD;AACA,IAAI,uDAAS;AACb,IAAI,yEAAe;AACnB;AACA;AACA;AACA;AACA,oBAAoB,oFAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AAC2C;;;;;;;;;;;;;ACpB3C;AAAA;AAAA;AAA8D;AAC9D;AACA,WAAW,yEAAe,qBAAqB,oCAAoC,EAAE;AACrF;AACiC;;;;;;;;;;;;;ACJjC;AAAA;AAAA;AAA8D;AAC9D;AACA,WAAW,yEAAe,qBAAqB,qCAAqC,EAAE;AACtF;AACkC;;;;;;;;;;;;;ACJlC;AAAA;AAAA;AAAA;AAAA,+BAA+B,4DAA4D;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;;;;;;;;;;;;;AC1B9C;AAAA;AAAA,6CAA6C,SAAI,MAAM;AACrC;;;;;;;;;;;;;ACDlB;AAAA;AAAA;AAAA,2DAA2D,kBAAkB;AAC7E;AACA;AACA,4BAA4B,gCAAgC;AAC5D,KAAK;AACL;AACA;AAC0D;;;;;;;;;;;;;ACP1D;AAAA;AAAA;AAAA;AAAA;AAAsD;AACH;AACjB;AAClC;AACA,4BAA4B,8CAAM;AAClC,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,sCAAsC,EAAE;AACrF,wDAAwD,+CAA+C,EAAE;AACzG;AACA;AACA;AACA,+DAA+D,8BAA8B;AAC7F;AACA;AACA;AACA;AACA;AACA,iFAAiF,uCAAuC;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yEAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gFAAgF;AAC9G,+BAA+B,8CAAM;AACrC;AACA;AACA;AACA;AACA;AACA,sCAAsC,8CAAM;AAC5C;AACA;AACA;AACA,4CAA4C,QAAQ,8CAAM,8CAA8C,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ,8CAAM,iDAAiD,EAAE;AAC7G;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,8CAAM;AACN;AACA;AACA;AACA;AACA,oDAAoD,oBAAoB,EAAE;AAC1E;AACA;AACA;AACA,8CAAM;AACN;AACA;AACA,uEAAqB,CAAC,8CAAM;AAC5B,uEAAqB,CAAC,8CAAM;AACP","file":"juggle-resize-observer.js","sourcesContent":["var DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return Object.freeze(this);\n    }\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { POLYFILL_CONSOLE_OUTPUT } from './utils/prettify';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (target instanceof Element === false) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (target instanceof Element === false) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return POLYFILL_CONSOLE_OUTPUT;\n    };\n    return ResizeObserver;\n}());\nexport default ResizeObserver;\nexport { ResizeObserver };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","import { scheduler } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { hasActiveObservations } from './algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from './algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from './algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from './algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from './algorithms/gatherActiveObservationsAtDepth';\nvar resizeObservers = [];\nvar observerMap = new Map();\nvar watching = 0;\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        resizeObservers.push(detail);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        if (observerMap.has(resizeObserver)) {\n            var detail = observerMap.get(resizeObserver);\n            if (getObservationIndex(detail.observationTargets, target) < 0) {\n                detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n                updateCount(1);\n                scheduler.schedule();\n            }\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        if (observerMap.has(resizeObserver)) {\n            var detail = observerMap.get(resizeObserver);\n            var index = getObservationIndex(detail.observationTargets, target);\n            if (index >= 0) {\n                detail.observationTargets.splice(index, 1);\n                updateCount(-1);\n            }\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        if (observerMap.has(resizeObserver)) {\n            var detail = observerMap.get(resizeObserver);\n            resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            observerMap.delete(resizeObserver);\n            updateCount(-detail.observationTargets.length);\n        }\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController, resizeObservers, process };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = boxes.borderBoxSize;\n        this.contentBoxSize = boxes.contentBoxSize;\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { resizeObservers } from '../ResizeObserverController';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { global } from '../utils/global';\nvar cache = new Map();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return Object.freeze({\n        inlineSize: (switchSizes ? blockSize : inlineSize) || 0,\n        blockSize: (switchSizes ? inlineSize : blockSize) || 0\n    });\n};\nvar zeroBoxes = Object.freeze({\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target) {\n    if (cache.has(target)) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = Object.freeze({\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox) {\n    var _a = calculateBoxSizes(target), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize;\n    return observedBox === ResizeObserverBoxOptions.BORDER_BOX ? borderBoxSize : contentBoxSize;\n};\nexport { calculateBoxSize, calculateBoxSizes, cache };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","import { resizeObservers } from '../ResizeObserverController';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { cache as sizeCache } from './calculateBoxSize';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    sizeCache.clear();\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { resizeObservers } from '../ResizeObserverController';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../ResizeObserverController';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isReplacedElement };\n","var global = typeof window === 'undefined' ? this || {} : window;\nexport { global };\n","var POLYFILL_CONSOLE_OUTPUT = 'function ResizeObserver () { [polyfill code] }';\nvar prettifyConsoleOutput = function (fn) {\n    Object.defineProperty(fn, 'toString', {\n        value: function () { return POLYFILL_CONSOLE_OUTPUT; }\n    });\n    return fn;\n};\nexport { POLYFILL_CONSOLE_OUTPUT, prettifyConsoleOutput };\n","import { process } from '../ResizeObserverController';\nimport { prettifyConsoleOutput } from './prettify';\nimport { global } from './global';\nvar CATCH_FRAMES = 60 / 5;\nvar requestAnimationFrame = global.requestAnimationFrame;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar rafSlot = new Map();\nvar resizeObserverSlot = new Map();\nvar scheduled;\nvar dispatchCallbacksOnNextFrame = function () {\n    if (scheduled) {\n        return;\n    }\n    scheduled = true;\n    function runSchedule(t) {\n        scheduled = false;\n        var frameCallbacks = [];\n        var resizeObserverCallbacks = [];\n        rafSlot.forEach(function (callback) { return frameCallbacks.push(callback); });\n        resizeObserverSlot.forEach(function (callback) { return resizeObserverCallbacks.push(callback); });\n        rafSlot.clear();\n        resizeObserverSlot.clear();\n        try {\n            for (var _i = 0, frameCallbacks_1 = frameCallbacks; _i < frameCallbacks_1.length; _i++) {\n                var callback = frameCallbacks_1[_i];\n                callback(t);\n            }\n        }\n        finally {\n            for (var _a = 0, resizeObserverCallbacks_1 = resizeObserverCallbacks; _a < resizeObserverCallbacks_1.length; _a++) {\n                var callback = resizeObserverCallbacks_1[_a];\n                callback(t);\n            }\n        }\n    }\n    ;\n    requestAnimationFrame(runSchedule);\n};\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (frames) {\n        var scheduler = this;\n        resizeObserverSlot.set(this, function ResizeObserver() {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                if (elementsHaveResized) {\n                    scheduler.run(60);\n                }\n                else if (frames) {\n                    scheduler.run(frames - 1);\n                }\n                else {\n                    scheduler.start();\n                }\n            }\n        });\n        dispatchCallbacksOnNextFrame();\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run(CATCH_FRAMES);\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            if ('MutationObserver' in global) {\n                this.observer = new MutationObserver(this.listener);\n                this.observe();\n            }\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar rafIdBase = 0;\nglobal.requestAnimationFrame = function (callback) {\n    if (typeof callback !== 'function') {\n        throw new Error('requestAnimationFrame expects 1 callback argument of type function.');\n    }\n    var handle = rafIdBase += 1;\n    rafSlot.set(handle, function AnimationFrame(t) { return callback(t); });\n    dispatchCallbacksOnNextFrame();\n    return handle;\n};\nglobal.cancelAnimationFrame = function (handle) {\n    rafSlot.delete(handle);\n};\nprettifyConsoleOutput(global.requestAnimationFrame);\nprettifyConsoleOutput(global.cancelAnimationFrame);\nexport { scheduler };\n"],"sourceRoot":"webpack:///"}